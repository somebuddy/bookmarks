@import '../resets/mixins';
@import '../layout/flex';

/* Button
Line spec:
  Space: 2 * line-height;
  Height: 1.6 * line-height;
  Line-height: line-height;
*/

$line-height: 1.5rem !default;
$column-width: 1rem !default;
$main-opacity: 1 !default;
$secondary-opacity: 0.6 !default;
$disabled-opacity: 0.2 !default;

$button-border-width: 1px !default;

@mixin button() {
  @include flex-inline-center;
  padding: (.2 * $line-height) $column-width;
  margin: calc(#{.3 * $line-height} - #{$button-border-width}) ($column-width/2);
  border-radius: 4px;
  border: 1px solid;
  font-size: .875rem;
  line-height: $line-height;
  text-transform: capitalize;
  font-variant: small-caps;
  cursor: pointer;
  opacity: $secondary-opacity;
  transition: opacity .3s ease;

  &:hover {
    opacity: $main-opacity;
  }

  &.disabled,
  &.disabled:hover {
    opacity: $disabled-opacity;
    cursor: not-allowed;
  }
}

@mixin button-flat {
  border-color: transparent;
  background: transparent;
}

.button {
  @include button;
  &.flat {
    @include button-flat;
  }
}

@include reset-link(button);

@mixin colorize-button($cls: null, $color: inherit, $bkg: transparentize(white, 0.8), $border: null) {
  $selector: if($cls, ".button." + #{$cls}, ".button");
  #{$selector} {
    color: $color;
    background: $bkg;
    border-color: $border;
  }
}

@include colorize-button;
@include colorize-button(white, white, transparentize(white, 0.8), transparentize(white, 0.8));
@include colorize-button(primary, white, #2196F3);
@include colorize-button(success, white, #4CAF50);
@include colorize-button(danger, white, transparentize(#F44336, .1));
@include colorize-button(transparent, $bkg: transparent);
