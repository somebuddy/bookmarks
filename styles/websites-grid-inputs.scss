@import 'layout/flex';
@import 'layout/mixins';
@import 'helpers/sqrt';
@import 'helpers/placeholder';

$line-height: 1.5rem !default;
$secondary-opacity: .6 !default;

.search-add-inputs {
  // Layout
  position: relative;
  @include flex-row;

  .state {
    @include absolute(0, auto, 0, auto);
    z-index: 0;
    // opacity: $secondary-opacity;
    width: 100%;
    transition: all .5s ease;

    .icon {
      flex: 0 0 auto;
      @include flex-center;
      align-self: center;
      opacity: $secondary-opacity;
      cursor: pointer;
    }

    &.search {
      left: 0;
    }

    &.add {
      right: 0;

      .icon {
        margin-left: auto;
      }
    }

    &.disabled {
      opacity: .2 !important;
      cursor: not-allowed;
    }
  }

  &.search > .state.search,
  &.add > .state.add {
    max-width: 100%;
  }

  .input {
    flex: 1 1 auto;
    @include flex-center;
    align-self: stretch;
    z-index: 1;

    input {
      width: 100%;
      background: transparent;
      border: none;
      outline: none;
      font-weight: 100;
      text-align: center;
      transition: transform .3s ease;
    }

    &.has-feedback > input {
      transform: scale(.6) translateY(-25%);
    }

    .feedback {
      @include absolute(auto, 10%, 0, 10%);
      padding: .125rem .5rem;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;

      font-size: $line-height / 2;
      font-weight: 600;
      text-transform: uppercase;
      text-align: center;

      opacity: 0;
      transition: opacity .5s ease;

      &.error {
        color: #ffcdd2;
      }

      &.success {
        color: #CCFF90;
      }

      &.hint {
        color: #E1F5FE;
      }
    }

    &.has-feedback > .feedback {
      opacity: 1;
    }
  }
}

// Sizes
@mixin search-add-inputs-sizes($base-size: 1.5rem) {
  $size: $base-size * 3;
  $font-size: $size / 3;

  margin-left: ($size / 2);
  margin-right: ($size / 2);
  height: $size;

  .state {
    max-width: $size;
    min-width: $size;

    .icon {
      font-size: $size / 2;
      width: $size;
      height: $size;
    }

    &.search {
      margin-left: -$size / 2;
    }

    &.add {
      margin-right: -$size / 2;
    }
  }

  .input {
    margin: 0 $size;
    padding: ($base-size / 2) 0;

    input {
      font-size: $base-size * 1.5;
      line-height: $base-size * 2;
    }
  }
}

.search-add-inputs {
  @include search-add-inputs-sizes(1rem);
}

.search-add-inputs {
  // Color schema
  .state.search {
    background: rgba(255,255,255, .4);
    color: rgba(0,0,0,.7);

    .icon {
      background: rgba(255,255,255, .9);
    }
  }

  &.search {
    input {
      color: rgba(0,0,0,.9);

      @include placeholder {
        color: rgba(0,0,0,.9);
        transition: color .1s ease .3s;
      }
    }
  }

  .state.add {
    background: rgba(50,50,50,.3);
    color: rgba(255,255,255, 1);

    .icon {
      background: rgba(50,50,50, .4);
    }
  }

  &.add {
    input {
      color: rgba(255,255,255,.9);

      @include placeholder {
        color: rgba(255,255,255,.9);
        transition: color .1s ease .3s;
      }
    }
  }
}

@mixin search-icon-size($size: 2rem) {
  @include size($size, $size);

  &:before {
    left: (1 + sqrt(0.5)) * $size / 2;
    top: (1 + sqrt(0.5)) * $size / 2;
    width: $size / 2;
  }
}

.search-icon {
  position: relative;
  border: 3px solid rgba(0,0,0,.7);
  border-radius: 50%;
  box-sizing: content-box;

  &:before {
    content: '';
    position: absolute;
    height: 0;
    border: 2px solid rgba(0,0,0,.4);
    background: rgba(0,0,0,.5);
    transform: rotate(45deg);
    transform-origin: 0 0;
    box-sizing: content-box;
  }

  @include search-icon-size(.75rem);
}

.state.add > .icon {
  position: relative;

  &:after, &:before {
    content: '';
    position: absolute;
    left: 50%;
    top: 50%;
    background: white;
    transform: translate(-50%, -50%);
    transform-origin: 50% 50%;
  }

  &:before {
    height: 50%;
    width: 2px;
  }

  &:after {
    width: 50%;
    height: 2px;
  }
}

@media (min-width: 40rem) {
  .search-add-inputs {
    @include search-add-inputs-sizes(1.5rem);
  }

  .search-icon {
    @include search-icon-size(1.5rem);
  }
}